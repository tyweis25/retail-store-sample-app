---
# Source: checkout/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: checkout
  labels:
    helm.sh/chart: checkout-0.0.1
    app.kubernetes.io/name: checkout
    app.kubernetes.io/instance: checkout
    app.kubernetes.io/component: service
    app.kuberneres.io/owner: retail-store-sample
    app.kubernetes.io/managed-by: Helm
---
# Source: checkout/templates/configmap.yml
apiVersion: v1
kind: ConfigMap
metadata:
  name: checkout
data:
  REDIS_URL: redis://checkout-redis:6379
  ENDPOINTS_ORDERS: http://orders:80
---
# Source: checkout/templates/redis-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: checkout-redis
  labels:
    helm.sh/chart: checkout-0.0.1
    app.kubernetes.io/name: checkout
    app.kubernetes.io/instance: checkout
    app.kubernetes.io/component: redis
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 6379
      targetPort: redis
      protocol: TCP
      name: redis
  selector:
    app.kubernetes.io/name: checkout
    app.kubernetes.io/instance: checkout
    app.kubernetes.io/component: redis
---
# Source: checkout/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: checkout
  labels:
    helm.sh/chart: checkout-0.0.1
    app.kubernetes.io/name: checkout
    app.kubernetes.io/instance: checkout
    app.kubernetes.io/component: service
    app.kuberneres.io/owner: retail-store-sample
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: checkout
    app.kubernetes.io/instance: checkout
    app.kubernetes.io/component: service
    app.kuberneres.io/owner: retail-store-sample
---
# Source: checkout/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: checkout
  labels:
    helm.sh/chart: checkout-0.0.1
    app.kubernetes.io/name: checkout
    app.kubernetes.io/instance: checkout
    app.kubernetes.io/component: service
    app.kuberneres.io/owner: retail-store-sample
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: checkout
      app.kubernetes.io/instance: checkout
      app.kubernetes.io/component: service
      app.kuberneres.io/owner: retail-store-sample
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: checkout
        app.kubernetes.io/instance: checkout
        app.kubernetes.io/component: service
        app.kuberneres.io/owner: retail-store-sample
    spec:
      serviceAccountName: checkout
      securityContext:
        fsGroup: 1000
      containers:
        - name: checkout
          envFrom:
            - configMapRef:
                name: checkout
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          image: "public.ecr.aws/aws-containers/retail-store-sample-checkout:0.8.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 3
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 128m
              memory: 256Mi
          volumeMounts:
            - mountPath: /tmp
              name: tmp-volume
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
---
# Source: checkout/templates/redis-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: checkout-redis
  labels:
    helm.sh/chart: checkout-0.0.1
    app.kubernetes.io/name: checkout
    app.kubernetes.io/instance: checkout
    app.kubernetes.io/component: redis
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: checkout
      app.kubernetes.io/instance: checkout
      app.kubernetes.io/component: redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: checkout
        app.kubernetes.io/instance: checkout
        app.kubernetes.io/component: redis
    spec:
      containers:
        - name: redis
          image: "redis:6.0-alpine"
          imagePullPolicy: IfNotPresent
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP

---
